##puerto mi computadora: puerto del contenedor
ports:
    -27017:27017

mi carpeta: con lo del imagen
volumen:
 - ./mongo:/data/db

dockerfile
copiar mis directorios (.) a mi /app (workdir elegido) en mi contenedor .


dockercompose ylm
 restart: always (si se apaga o algo se vuelve a levantar)
 web:
    build: 
      context: . (solo si el dockerfile esta en la misma ruta que el docker-compose sino colocar la ruta en donde se encuente este dockerfile)
      dockerfile: Dockerfile

# add app
COPY . .

 seccion 8: seed y paginacion

************************** forma de insertar uno por uno - profesor

 @Injectable()
export class SeedService {
  
  constructor(
    @InjectModel(Pokemon.name)
        private readonly pokemonModel: Model<Pokemon>,
  ) {}

  private readonly axios: AxiosInstance = axios;
  
  
  async exececuteSeed() {
    
    const {data} = await this.axios.get<PokeResponse>('https://pokeapi.co/api/v2/pokemon?limit=10')
   
    //forma 1 de hacer inserciones multiples
    const insertPromisesArray: Promise<Pokemon>[] = [];
    
    data.results.forEach( async ({name, url}) => {
      const segments = url.split('/');
      const no:number = +segments[segments.length - 2];

      const pokemon = await this.pokemonModel.create({name, no});
    
    });

   return 'Seed Executed';
  }

  ************************** forma de insertar uno por uno - mi solucion
 
  @Injectable()
export class SeedService {
    private readonly pokemonService: PokemonService,
  ) {}

  private readonly axios: AxiosInstance = axios;
  
  
  async exececuteSeed() {
   
    const {data} = await this.axios.get<PokeResponse>('https://pokeapi.co/api/v2/pokemon?limit=10')

    data.results.forEach( async ({name, url}) => {
      const segments = url.split('/');
      const no:number = +segments[segments.length - 2];
      await this.pokemonService.create({name, no});
    });
    
    return 'Seed Executed';
  }


  *****SOLUCIONES PARA INSERTAR TODO SIMULTANEAMENTE

  SOLUCION 1 - profesor


@Injectable()
export class SeedService {
  constructor(
    @InjectModel(Pokemon.name)
        private readonly pokemonModel: Model<Pokemon>,
  ) {}

  private readonly axios: AxiosInstance = axios;
  
  
  async exececuteSeed() {
    
    await this.pokemonModel.deleteMany();

    const {data} = await this.axios.get<PokeResponse>('https://pokeapi.co/api/v2/pokemon?limit=10')
   
    const insertPromisesArray: Promise<Pokemon>[] = [];
    
    data.results.forEach(({name, url}) => {
      const segments = url.split('/');
      const no:number = +segments[segments.length - 2];
      
      insertPromisesArray.push(
        this.pokemonModel.create({name, no}) 
      );

    });

    await Promise.all(insertPromisesArray);
    return 'Seed Executed';
  }
}


/// ponerlo si se usa el swagger
,
    "plugins": ["@nestjs/swagger"]

esto se pone en el main
 //para verlo desde mi swagger
  const config = new DocumentBuilder()
  .setTitle("Car Dealership API")
  .setDescription("The pokemon API description")
  .setVersion("1.0")
  .build();
  const document = SwaggerModule.createDocument(app, config);
  SwaggerModule.setup("docs", app, document);


  //// el validation schema con JOi valida que estan configuradas las variables de entorno como se espera que deben ir y sino estan te da los errores en consola 



  /// Dockerfile version simple
  #Dockerfile con NPM
FROM node:23-alpine3.20
# Set working directory
RUN mkdir -p /var/www/pokedex
WORKDIR /var/www/pokedex

# Copiar el directorio y su contenido
COPY . ./var/www/pokedex
COPY package.json tsconfig.json tsconfig.build.json /var/www/pokedex/
RUN npm install --prod
RUN npm build


# Dar permiso para ejecutar la applicación
RUN adduser --disabled-password pokeuser
RUN chown -R pokeuser:pokeuser /var/www/pokedex
USER pokeuser

# Limpiar el caché
RUN npm cache clean --force

EXPOSE 3000

CMD [ "npm","start" ]

/////////////
TypeOrmModule.forRoot({
    type: 'mongodb',
    host: process.env.DB_HOST, // localhost
    database: process.env.DB_NAME,
    autoLoadEntities: true,
    synchronize: true, //! remove when production!!
}),